{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/components/dnd/Card.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\nimport { Card as CardType } from '@/types';\r\n\r\nexport function Card({ card }: { card: CardType }) {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n  } = useSortable({ \r\n    id: card._id,\r\n    data: {\r\n      type: 'Card',\r\n    }\r\n  });\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n  };\r\n\r\n  return (\r\n    <div ref={setNodeRef} style={style} {...attributes} {...listeners} className=\"bg-white p-2 rounded-md shadow-sm\">\r\n      {card.name}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAMO,SAAS,KAAK,EAAE,IAAI,EAAsB;IAC/C,MAAM,EACJ,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,EACT,UAAU,EACX,GAAG,CAAA,GAAA,mKAAA,CAAA,cAAW,AAAD,EAAE;QACd,IAAI,KAAK,GAAG;QACZ,MAAM;YACJ,MAAM;QACR;IACF;IAEA,MAAM,QAAQ;QACZ,WAAW,qKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC;IACF;IAEA,qBACE,8OAAC;QAAI,KAAK;QAAY,OAAO;QAAQ,GAAG,UAAU;QAAG,GAAG,SAAS;QAAE,WAAU;kBAC1E,KAAK,IAAI;;;;;;AAGhB","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/components/dnd/List.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\r\nimport { Card } from './Card';\r\nimport { List as ListType } from '@/types';\r\n\r\nexport function List({ list, cards }: { list: ListType, cards: any[] }) {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n  } = useSortable({ \r\n    id: list._id,\r\n    data: {\r\n      type: 'List',\r\n    }\r\n  });\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n  };\r\n\r\n  return (\r\n    <div ref={setNodeRef} style={style} {...attributes} {...listeners} className=\"bg-gray-200 p-4 rounded-md w-72\">\r\n      <h2 className=\"font-bold mb-2\">{list.name}</h2>\r\n      <SortableContext items={cards.map(c => c._id)} strategy={verticalListSortingStrategy}>\r\n        <div className=\"space-y-2\">\r\n          {cards.map(card => (\r\n            <Card key={card._id} card={card} />\r\n          ))}\r\n        </div>\r\n      </SortableContext>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;;AAQO,SAAS,KAAK,EAAE,IAAI,EAAE,KAAK,EAAoC;IACpE,MAAM,EACJ,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,EACT,UAAU,EACX,GAAG,CAAA,GAAA,mKAAA,CAAA,cAAW,AAAD,EAAE;QACd,IAAI,KAAK,GAAG;QACZ,MAAM;YACJ,MAAM;QACR;IACF;IAEA,MAAM,QAAQ;QACZ,WAAW,qKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC;IACF;IAEA,qBACE,8OAAC;QAAI,KAAK;QAAY,OAAO;QAAQ,GAAG,UAAU;QAAG,GAAG,SAAS;QAAE,WAAU;;0BAC3E,8OAAC;gBAAG,WAAU;0BAAkB,KAAK,IAAI;;;;;;0BACzC,8OAAC,mKAAA,CAAA,kBAAe;gBAAC,OAAO,MAAM,GAAG,CAAC,CAAA,IAAK,EAAE,GAAG;gBAAG,UAAU,mKAAA,CAAA,8BAA2B;0BAClF,cAAA,8OAAC;oBAAI,WAAU;8BACZ,MAAM,GAAG,CAAC,CAAA,qBACT,8OAAC,iIAAA,CAAA,OAAI;4BAAgB,MAAM;2BAAhB,KAAK,GAAG;;;;;;;;;;;;;;;;;;;;;AAM/B","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { DndContext, closestCorners, DragEndEvent } from '@dnd-kit/core';\r\nimport { SortableContext, horizontalListSortingStrategy, arrayMove } from '@dnd-kit/sortable';\r\nimport { List as ListType, Card as CardType, Board as BoardType } from '@/types';\r\nimport { List } from '@/components/dnd/List';\r\n\r\nexport default function Home() {\r\n  const [board, setBoard] = useState<BoardType | null>(null);\r\n  const [lists, setLists] = useState<ListType[]>([]);\r\n  const [cards, setCards] = useState<CardType[]>([]);\r\n\r\n  useEffect(() => {\r\n    // TODO: Replace with a dynamic way to get the board ID\r\n    const boardId = '66779308182b02234a532382'; // IMPORTANT: Replace with a valid board ID from your DB\r\n    if (boardId) {\r\n      fetch(`/api/boards/${boardId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setBoard(data.board);\r\n          setLists(data.lists);\r\n          setCards(data.cards);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const handleDragEnd = (event: DragEndEvent) => {\r\n    const { active, over } = event;\r\n    if (!over) return;\r\n\r\n    if (active.id !== over.id) {\r\n        // Dragging lists\r\n        if (active.data.current?.type === 'List' && over.data.current?.type === 'List') {\r\n            setLists((lists) => {\r\n                const activeIndex = lists.findIndex(l => l._id === active.id);\r\n                const overIndex = lists.findIndex(l => l._id === over.id);\r\n                if (activeIndex === -1 || overIndex === -1) return lists;\r\n                const newLists = arrayMove(lists, activeIndex, overIndex);\r\n    \r\n                // API call to update list position\r\n                newLists.forEach((list, index) => {\r\n                fetch(`/api/lists/${list._id}`, {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ position: index }),\r\n                });\r\n                });\r\n    \r\n                return newLists;\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n      // Dragging cards\r\n      if (active.data.current?.type === 'Card') {\r\n        setCards((currentCards) => {\r\n            const activeIndex = currentCards.findIndex(c => c._id === active.id);\r\n            const overIndex = currentCards.findIndex(c => c._id === over.id);\r\n\r\n            if (activeIndex === -1 || overIndex === -1) {\r\n                return currentCards;\r\n            }\r\n            \r\n            let newCards = arrayMove(currentCards, activeIndex, overIndex);\r\n            \r\n            const overListId = over.data.current?.sortable?.containerId || newCards[overIndex].list;\r\n\r\n            if (overListId && newCards[activeIndex].list !== overListId) {\r\n                newCards[activeIndex] = { ...newCards[activeIndex], list: overListId };\r\n                newCards = arrayMove(newCards, activeIndex, overIndex);\r\n            }\r\n\r\n            // API call to update card position and list\r\n            fetch(`/api/cards/${active.id}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    position: overIndex,\r\n                    list: overListId,\r\n                }),\r\n            });\r\n          \r\n          return newCards;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!board) {\r\n    return (\r\n        <div className=\"flex justify-center items-center h-screen\">\r\n            <p>Please update the boardId in <code>src/app/page.tsx</code> with an ID from your database.</p>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DndContext onDragEnd={handleDragEnd} collisionDetection={closestCorners}>\r\n      <div className=\"p-4\">\r\n        <h1 className=\"text-2xl font-bold mb-4\">{board.name}</h1>\r\n        <SortableContext items={lists.map(l => l._id)} strategy={horizontalListSortingStrategy}>\r\n          <div className=\"flex gap-4\">\r\n            {lists.length > 0 ? (\r\n              lists.map(list => (\r\n                <List key={list._id} list={list} cards={cards.filter(c => c.list === list._id)} />\r\n              ))\r\n            ) : (\r\n              <div className=\"flex flex-col items-center justify-center h-full w-full\">\r\n                <p className=\"text-gray-500\">No lists yet. Create one to get started!</p>\r\n                {/* TODO: Add a button to create a new list */}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </SortableContext>\r\n      </div>\r\n    </DndContext>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}