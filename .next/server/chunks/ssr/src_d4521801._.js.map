{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/libs/api.ts"],"sourcesContent":["import Cookies from \"js-cookie\";\nimport { Board, Card, List, User } from \"@/types\";\n\ntype RequestInit = globalThis.RequestInit;\n\nclass BoardHubAPI {\n  baseURL: string;\n\n  constructor(baseURL: string) {\n    this.baseURL = baseURL;\n  }\n\n  getToken() {\n    return Cookies.get(\"token\");\n  }\n\n  setToken(token: string) {\n    Cookies.set(\"token\", token, { expires: 7, path: \"/\" });\n  }\n\n  removeToken() {\n    Cookies.remove(\"token\", { path: \"/\" });\n  }\n\n  async request(endpoint: string, options: RequestInit = {}) {\n    const token = this.getToken();\n    const url = `${this.baseURL}${endpoint}`;\n    const config: RequestInit = {\n      ...options,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...options.headers,\n      },\n    };\n\n    if (token) {\n      (config.headers as Record<string, string>).Authorization =\n        `Bearer ${token}`;\n    }\n\n    const response = await fetch(url, config);\n    const data = await response.json();\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        this.removeToken();\n        if (typeof window !== \"undefined\") {\n          window.location.href = \"/login\";\n        }\n      }\n      throw new Error(data.message || \"API request failed\");\n    }\n\n    return data;\n  }\n\n  // Authentication\n  async login(email: string, password: string): Promise<User> {\n    const data = await this.request(\"/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify({ email, password }),\n    });\n    this.setToken(data.data.token);\n    return data.data.user;\n  }\n\n  async register(name: string, email: string, password: string): Promise<User> {\n    const data = await this.request(\"/auth/register\", {\n      method: \"POST\",\n      body: JSON.stringify({ name, email, password }),\n    });\n    this.setToken(data.data.token);\n    return data.data.user;\n  }\n\n  async logout() {\n    await this.request(\"/auth/logout\", { method: \"POST\" });\n    this.removeToken();\n  }\n\n  async getMe(): Promise<User> {\n    const data = await this.request(\"/auth/me\");\n    return data.data.user;\n  }\n\n  async updateProfile(userData: Partial<User>): Promise<User> {\n    const data = await this.request(\"/auth/profile\", {\n      method: \"PUT\",\n      body: JSON.stringify(userData),\n    });\n    return data.data.user;\n  }\n\n  // Boards\n  async getBoards(): Promise<Board[]> {\n    const data = await this.request(\"/boards\");\n    return data.data.boards;\n  }\n\n  async createBoard(boardData: Partial<Board>): Promise<Board> {\n    const data = await this.request(\"/boards\", {\n      method: \"POST\",\n      body: JSON.stringify(boardData),\n    });\n    return data.data.board;\n  }\n\n  async updateBoard(\n    boardId: string,\n    boardData: Partial<Board>,\n  ): Promise<Board> {\n    const data = await this.request(`/boards/${boardId}`, {\n      method: \"PUT\",\n      body: JSON.stringify(boardData),\n    });\n    return data.data.board;\n  }\n\n  async deleteBoard(boardId: string): Promise<void> {\n    await this.request(`/boards/${boardId}`, { method: \"DELETE\" });\n  }\n\n  // Lists\n  async getLists(boardId: string): Promise<List[]> {\n    const data = await this.request(`/lists/board/${boardId}`);\n    return data.data.lists;\n  }\n\n  async createList(listData: Partial<List>): Promise<List> {\n    const data = await this.request(\"/lists\", {\n      method: \"POST\",\n      body: JSON.stringify(listData),\n    });\n    return data.data.list;\n  }\n\n  async updateList(listId: string, listData: Partial<List>): Promise<List> {\n    const data = await this.request(`/lists/${listId}`, {\n      method: \"PUT\",\n      body: JSON.stringify(listData),\n    });\n    return data.data.list;\n  }\n\n  async reorderList(listId: string, newOrder: number) {\n    return this.request(`/lists/${listId}/reorder`, {\n      method: \"PUT\",\n      body: JSON.stringify({ newOrder }),\n    });\n  }\n\n  // Cards\n  async getCards(listId: string): Promise<Card[]> {\n    const data = await this.request(`/cards/list/${listId}`);\n    return data.data.cards;\n  }\n\n  async createCard(cardData: Partial<Card>): Promise<Card> {\n    const data = await this.request(\"/cards\", {\n      method: \"POST\",\n      body: JSON.stringify(cardData),\n    });\n    return data.data.card;\n  }\n\n  async updateCard(cardId: string, cardData: Partial<Card>): Promise<Card> {\n    const data = await this.request(`/cards/${cardId}`, {\n      method: \"PUT\",\n      body: JSON.stringify(cardData),\n    });\n    return data.data.card;\n  }\n\n  async deleteCard(cardId: string): Promise<void> {\n    await this.request(`/cards/${cardId}`, { method: \"DELETE\" });\n  }\n\n  async moveCard(\n    cardId: string,\n    newListId: string,\n    newOrder: number,\n  ): Promise<Card> {\n    const data = await this.request(`/cards/${cardId}/move`, {\n      method: \"PUT\",\n      body: JSON.stringify({ newListId, newOrder }),\n    });\n    return data.data.card;\n  }\n\n  async deleteList(listId: string): Promise<void> {\n    await this.request(`/lists/${listId}`, { method: \"DELETE\" });\n  }\n}\n\nexport const api = new BoardHubAPI(\"https://boardhub-backend.onrender.com/api\");\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/components/dnd/Card.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { Card as CardType } from \"@/types\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { api } from \"@/libs/api\";\n\nexport function Card({\n  card,\n  listId,\n  onDelete,\n}: {\n  card: CardType;\n  listId: string;\n  onDelete?: (cardId: string) => void;\n}) {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedCard, setEditedCard] = useState(card);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const menuRef = useRef<HTMLDivElement>(null);\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        menuRef.current &&\n        !menuRef.current.contains(event.target as Node) &&\n        menuButtonRef.current &&\n        !menuButtonRef.current.contains(event.target as Node)\n      ) {\n        setIsMenuOpen(false);\n      }\n    };\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => document.removeEventListener(\"click\", handleClickOutside);\n  }, []);\n\n  const { attributes, listeners, setNodeRef, transform, transition } =\n    useSortable({\n      id: card._id,\n      data: {\n        type: \"Card\",\n        listId,\n      },\n    });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  const handleUpdateCard = async () => {\n    if (!editedCard.title.trim()) return;\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const updatedCard = await api.updateCard(card._id, {\n        title: editedCard.title,\n        description: editedCard.description,\n        priority: editedCard.priority,\n        isCompleted: editedCard.isCompleted,\n      });\n      Object.assign(card, updatedCard);\n      setIsEditing(false);\n    } catch (err: any) {\n      setError(err?.message || \"Failed to update card\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDeleteCard = async () => {\n    if (!confirm(\"Are you sure you want to delete this card?\")) return;\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      await api.deleteCard(card._id);\n      onDelete?.(card._id);\n      setIsMenuOpen(false);\n    } catch (err: any) {\n      setError(err?.message || \"Failed to delete card\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleMenuClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const handleEditClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsEditing(true);\n    setIsMenuOpen(false);\n  };\n\n  const handleModalClose = () => {\n    setIsEditing(false);\n    setEditedCard(card); // Reset form\n  };\n\n  return (\n    <>\n      <div\n        ref={setNodeRef}\n        style={style}\n        {...attributes}\n        {...listeners}\n        className=\"bg-white dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600 p-3 cursor-pointer hover:shadow-md dark:hover:bg-gray-600 transition-all duration-200 group relative\"\n      >\n        <div className=\"flex flex-col gap-2\">\n          <div className=\"font-medium text-gray-700 dark:text-white break-words\">\n            {card.title}\n          </div>\n          <div className=\"flex flex-wrap gap-1.5\">\n            {card.labels &&\n              card.labels.map((label, index) => (\n                <span\n                  key={index}\n                  className=\"inline-block text-xs px-2 py-0.5 rounded-full\"\n                  style={{\n                    backgroundColor: `${label.color}15`,\n                    color: label.color,\n                    border: `1px solid ${label.color}30`,\n                  }}\n                >\n                  {label.name}\n                </span>\n              ))}\n          </div>\n          {card.description && (\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 line-clamp-2\">\n              {card.description}\n            </div>\n          )}\n          <div className=\"flex items-center justify-between mt-1\">\n            {card.priority && (\n              <span\n                className={`inline-flex items-center text-xs px-2 py-0.5 rounded-full font-medium border ${\n                  card.priority === \"high\"\n                    ? \"bg-red-50 text-red-600 border-red-200 dark:bg-red-900/30 dark:text-red-400 dark:border-red-800\"\n                    : card.priority === \"medium\"\n                      ? \"bg-yellow-50 text-yellow-600 border-yellow-200 dark:bg-yellow-900/30 dark:text-yellow-400 dark:border-yellow-800\"\n                      : \"bg-blue-50 text-blue-600 border-blue-200 dark:bg-blue-900/30 dark:text-blue-400 dark:border-blue-800\"\n                }`}\n              >\n                <svg\n                  className=\"w-3 h-3 mr-1\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M12 19l9 2-9-18-9 18 9-2zm0-3l-4.5 1L12 6l4.5 11L12 16z\" />\n                </svg>\n                {card.priority}\n              </span>\n            )}\n            <div className=\"flex items-center gap-3 text-gray-400 dark:text-gray-500\">\n              {card.dueDate && (\n                <span className=\"flex items-center text-xs gap-1 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\">\n                  <svg\n                    className=\"w-3 h-3\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                    />\n                  </svg>\n                  {new Date(card.dueDate).toLocaleDateString()}\n                </span>\n              )}\n              {card.description && (\n                <span className=\"hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\">\n                  <svg\n                    className=\"w-3 h-3\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M4 6h16M4 12h16M4 18h7\"\n                    />\n                  </svg>\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"absolute top-2 right-2\">\n          <button\n            ref={menuButtonRef}\n            type=\"button\"\n            onClick={handleMenuClick}\n            className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-500 rounded-md text-gray-400 hover:text-gray-600 dark:text-gray-400 dark:hover:text-gray-300\"\n          >\n            <svg\n              className=\"w-4 h-4\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"\n              />\n            </svg>\n          </button>\n          {isMenuOpen && (\n            <div\n              ref={menuRef}\n              className=\"absolute right-0 mt-1 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 py-1 z-50\"\n            >\n              <button\n                type=\"button\"\n                onClick={handleEditClick}\n                className=\"w-full px-4 py-2 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                Edit Card\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleDeleteCard}\n                className=\"w-full px-4 py-2 text-left text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/30\"\n              >\n                Delete Card\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Edit Modal */}\n      {isEditing && (\n        <div\n          className=\"fixed inset-0 z-[100] flex items-center justify-center bg-black/30\"\n          onClick={handleModalClose}\n        >\n          <div\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg w-full max-w-lg mx-4\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Edit Card\n              </h3>\n              {error && (\n                <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900/30 text-red-600 dark:text-red-400 rounded-lg\">\n                  {error}\n                </div>\n              )}\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Title\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={editedCard.title}\n                    onChange={(e) =>\n                      setEditedCard({ ...editedCard, title: e.target.value })\n                    }\n                    className=\"w-full p-2 border dark:border-gray-600 rounded-lg bg-transparent dark:bg-gray-700 dark:text-white focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-400\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Description\n                  </label>\n                  <textarea\n                    value={editedCard.description || \"\"}\n                    onChange={(e) =>\n                      setEditedCard({\n                        ...editedCard,\n                        description: e.target.value,\n                      })\n                    }\n                    rows={3}\n                    className=\"w-full p-2 border dark:border-gray-600 rounded-lg bg-transparent dark:bg-gray-700 dark:text-white focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-400 resize-none\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Priority\n                  </label>\n                  <select\n                    value={editedCard.priority || \"low\"}\n                    onChange={(e) =>\n                      setEditedCard({\n                        ...editedCard,\n                        priority: e.target.value as \"low\" | \"medium\" | \"high\",\n                      })\n                    }\n                    className=\"w-full p-2 border dark:border-gray-600 rounded-lg bg-transparent dark:bg-gray-700 dark:text-white focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-400\"\n                  >\n                    <option value=\"low\">Low</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"high\">High</option>\n                  </select>\n                </div>\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id={`isCompleted-${card._id}`}\n                    checked={editedCard.isCompleted}\n                    onChange={(e) =>\n                      setEditedCard({\n                        ...editedCard,\n                        isCompleted: e.target.checked,\n                      })\n                    }\n                    className=\"rounded border-gray-300 text-indigo-600 focus:ring-indigo-500 dark:border-gray-600 dark:bg-gray-700\"\n                  />\n                  <label\n                    htmlFor={`isCompleted-${card._id}`}\n                    className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\"\n                  >\n                    Mark as completed\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div className=\"border-t dark:border-gray-700 px-6 py-4 flex justify-end gap-3\">\n              <button\n                type=\"button\"\n                onClick={handleModalClose}\n                className=\"px-4 py-2 text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors duration-200\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleUpdateCard}\n                disabled={isLoading}\n                className=\"px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg transition-colors duration-200 flex items-center gap-2\"\n              >\n                {isLoading ? (\n                  <>\n                    <svg className=\"animate-spin w-4 h-4\" viewBox=\"0 0 24 24\">\n                      <circle\n                        className=\"opacity-25\"\n                        cx=\"12\"\n                        cy=\"12\"\n                        r=\"10\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"4\"\n                        fill=\"none\"\n                      />\n                      <path\n                        className=\"opacity-75\"\n                        fill=\"currentColor\"\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                      />\n                    </svg>\n                    Saving...\n                  </>\n                ) : (\n                  \"Save Changes\"\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/components/dnd/List.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport {\n  SortableContext,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\nimport { Card } from \"./Card\";\nimport { List as ListType, Card as CardType } from \"@/types\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { api } from \"@/libs/api\";\n\nexport function List({\n  list,\n  cards,\n  onCardCreated,\n  onCreateCard,\n  onDelete,\n}: {\n  list: ListType;\n  cards: CardType[];\n  onCardCreated?: (card: CardType) => void;\n  onCreateCard?: (\n    listId: string,\n    cardData: Partial<CardType>,\n    onSuccess: (card: CardType) => void,\n  ) => void;\n  onDelete?: (listId: string) => void;\n}) {\n  const { attributes, listeners, setNodeRef, transform, transition } =\n    useSortable({\n      id: list.id || list._id || \"\",\n      data: {\n        type: \"List\",\n      },\n    });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  const [isAdding, setIsAdding] = useState(false);\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [globalError, setGlobalError] = useState(\"\");\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(list.title);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        menuRef.current &&\n        !menuRef.current.contains(event.target as Node) &&\n        menuButtonRef.current &&\n        !menuButtonRef.current.contains(event.target as Node)\n      ) {\n        setIsMenuOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  const handleAddCard = async () => {\n    if (!cardTitle.trim()) return;\n    let newOrder = 0;\n    if (cards.length > 0) {\n      newOrder = (cards[cards.length - 1].order || 0) + 1024;\n    }\n    const cardData = {\n      title: cardTitle,\n      list: list._id || list.id || \"\",\n      board: list.board,\n      order: newOrder,\n      priority: \"low\" as \"low\" | \"medium\" | \"high\",\n      isCompleted: false,\n    };\n    if (onCreateCard) {\n      onCreateCard(list._id || list.id || \"\", cardData, (newCard) => {\n        setCardTitle(\"\");\n        setIsAdding(false);\n        if (onCardCreated) onCardCreated(newCard);\n      });\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleAddCard();\n    }\n    if (e.key === \"Escape\") {\n      setIsAdding(false);\n    }\n  };\n\n  const handleUpdateList = async () => {\n    if (!editedTitle.trim()) {\n      setEditedTitle(list.title);\n      setIsEditing(false);\n      return;\n    }\n    try {\n      await api.updateList(list._id || list.id || \"\", { title: editedTitle });\n      list.title = editedTitle;\n      setIsEditing(false);\n    } catch (error) {\n      setGlobalError(\"Failed to update list\");\n      setEditedTitle(list.title);\n    }\n  };\n\n  const handleDeleteList = async () => {\n    if (\n      !confirm(\"Are you sure you want to delete this list and all its cards?\")\n    )\n      return;\n    try {\n      await api.deleteList(list._id || list.id || \"\");\n      onDelete?.(list._id || list.id || \"\");\n    } catch (error) {\n      setGlobalError(\"Failed to delete list\");\n    }\n  };\n\n  const handleCardDelete = (cardId: string) => {\n    const newCards = cards.filter((c) => c._id !== cardId);\n    if (onCardCreated) {\n      const updatedList = { ...list, cards: newCards };\n      onCardCreated(updatedList as unknown as CardType);\n    }\n  };\n\n  return (\n    <div\n      className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg w-72 flex flex-col max-h-[calc(100vh-12rem)] group\"\n    >\n      <div\n        ref={setNodeRef}\n        {...attributes}\n        {...listeners}\n        className=\"p-3 flex items-center justify-between rounded-t-lg border-b dark:border-gray-700\"\n      >\n        {isEditing ? (\n          <input\n            type=\"text\"\n            value={editedTitle}\n            onChange={(e) => setEditedTitle(e.target.value)}\n            onBlur={handleUpdateList}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                handleUpdateList();\n              }\n              if (e.key === \"Escape\") {\n                setIsEditing(false);\n                setEditedTitle(list.title);\n              }\n            }}\n            className=\"flex-1 p-1 border dark:border-gray-600 rounded bg-transparent dark:bg-gray-700 dark:text-white focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-400\"\n            autoFocus\n          />\n        ) : (\n          <h2 className=\"font-medium text-gray-800 dark:text-white\">\n            {list.title}\n          </h2>\n        )}\n        <button\n          ref={menuButtonRef}\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            setIsMenuOpen(!isMenuOpen);\n          }}\n          className=\"p-1 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700 transition-all duration-200\"\n        >\n          <svg\n            className=\"w-5 h-5 text-gray-500 dark:text-gray-400\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"\n            />\n          </svg>\n        </button>\n        {isMenuOpen && (\n          <div\n            ref={menuRef}\n            className=\"absolute right-2 top-12 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 py-1 z-50\"\n          >\n            <button\n              type=\"button\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                setIsEditing(true);\n                setIsMenuOpen(false);\n              }}\n              className=\"w-full px-4 py-2 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n            >\n              Edit List\n            </button>\n            <button\n              type=\"button\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                handleDeleteList();\n                setIsMenuOpen(false);\n              }}\n              className=\"w-full px-4 py-2 text-left text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/30\"\n            >\n              Delete List\n            </button>\n          </div>\n        )}\n      </div>\n      <SortableContext\n        items={cards.map((c) => c._id)}\n        strategy={verticalListSortingStrategy}\n      >\n        <div className=\"flex-1 px-2 py-3 space-y-2 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-600\">\n          {cards.map((card, idx) => (\n            <Card\n              key={card._id || (card.title + idx)}\n              card={card}\n              listId={list.id || list._id || \"\"}\n              onDelete={handleCardDelete}\n            />\n          ))}\n        </div>\n      </SortableContext>\n      {isAdding ? (\n        <div className=\"p-2 border-t dark:border-gray-700\">\n          <textarea\n            value={cardTitle}\n            onChange={(e) => setCardTitle(e.target.value)}\n            onKeyDown={handleKeyDown}\n            className=\"w-full p-2 border dark:border-gray-600 rounded-md mb-2 bg-transparent dark:bg-gray-700 dark:text-white focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-400 focus:border-transparent resize-none\"\n            placeholder=\"Enter a title for this card...\"\n            rows={3}\n            autoFocus\n          />\n          <div className=\"flex gap-2\">\n            <button\n              type=\"button\"\n              onClick={handleAddCard}\n              className=\"flex-1 bg-indigo-600 hover:bg-indigo-700 text-white px-3 py-1.5 rounded-md font-medium transition-colors duration-200 text-sm\"\n            >\n              Add Card\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => setIsAdding(false)}\n              className=\"px-3 py-1.5 text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-md transition-colors duration-200 text-sm\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      ) : (\n        <button\n          type=\"button\"\n          onClick={() => setIsAdding(true)}\n          className=\"p-3 text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700/50 rounded-b-lg transition-colors duration-200 flex items-center gap-2 text-sm font-medium\"\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M12 4v16m8-8H4\"\n            />\n          </svg>\n          Add a card\n        </button>\n      )}\n      {globalError && (\n        <div className=\"fixed top-6 left-1/2 -translate-x-1/2 z-50\">\n          <div className=\"bg-red-600 text-white px-6 py-3 rounded-lg shadow-lg flex items-center gap-3\">\n            <svg\n              className=\"w-5 h-5\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M18.364 5.636l-12.728 12.728M5.636 5.636l12.728 12.728\"\n              />\n            </svg>\n            <span>{globalError}</span>\n            <button\n              className=\"ml-4 text-white/80 hover:text-white\"\n              onClick={() => setGlobalError(\"\")}\n            >\n              &times;\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1189, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/components/dnd/BoardSkeleton.tsx"],"sourcesContent":["export function BoardSkeleton() {\n  return (\n    <div className=\"p-4\">\n      <div className=\"h-8 w-48 bg-gray-200 dark:bg-gray-700 rounded-md mb-4 animate-pulse\"></div>\n      <div className=\"flex gap-4\">\n        <div className=\"w-72 bg-gray-200 dark:bg-gray-700 rounded-md p-4 animate-pulse\">\n          <div className=\"h-6 w-32 bg-gray-300 dark:bg-gray-600 rounded-md mb-2\"></div>\n          <div className=\"space-y-2\">\n            <div className=\"h-10 bg-gray-300 dark:bg-gray-600 rounded-md\"></div>\n            <div className=\"h-10 bg-gray-300 dark:bg-gray-600 rounded-md\"></div>\n            <div className=\"h-10 bg-gray-300 dark:bg-gray-600 rounded-md\"></div>\n          </div>\n        </div>\n        <div className=\"w-72 bg-gray-200 dark:bg-gray-700 rounded-md p-4 animate-pulse\">\n          <div className=\"h-6 w-32 bg-gray-300 dark:bg-gray-600 rounded-md mb-2\"></div>\n          <div className=\"space-y-2\">\n            <div className=\"h-10 bg-gray-300 dark:bg-gray-600 rounded-md\"></div>\n            <div className=\"h-10 bg-gray-300 dark:bg-gray-600 rounded-md\"></div>\n          </div>\n        </div>\n        <div className=\"w-72 bg-gray-200 dark:bg-gray-700 rounded-md p-4 animate-pulse\">\n          <div className=\"h-6 w-32 bg-gray-300 dark:bg-gray-600 rounded-md mb-2\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAI,WAAU;;;;;;;;;;;;;;;;;;kCAGnB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAI,WAAU;;;;;;;;;;;;;;;;;;kCAGnB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKzB","debugId":null}},
    {"offset": {"line": 1326, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { DndContext, closestCorners, DragEndEvent } from \"@dnd-kit/core\";\nimport {\n  SortableContext,\n  horizontalListSortingStrategy,\n  arrayMove,\n} from \"@dnd-kit/sortable\";\nimport {\n  List as ListType,\n  Card as CardType,\n  Board as BoardType,\n} from \"@/types\";\nimport { List } from \"@/components/dnd/List\";\nimport { BoardSkeleton } from \"@/components/dnd/BoardSkeleton\";\nimport { api } from \"@/libs/api\";\n\nexport default function Home() {\n  const [boards, setBoards] = useState<BoardType[]>([]);\n  const [activeBoard, setActiveBoard] = useState<BoardType | null>(null);\n  const [lists, setLists] = useState<ListType[]>([]);\n  const [cards, setCards] = useState<Record<string, CardType[]>>({});\n  const [loading, setLoading] = useState(true);\n  const [loadingBoard, setLoadingBoard] = useState(false);\n  const [isCreatingList, setIsCreatingList] = useState(false);\n  const [newListTitle, setNewListTitle] = useState(\"\");\n  const [cardOpLoading, setCardOpLoading] = useState(false);\n  const [cardOpError, setCardOpError] = useState(\"\");\n\n  useEffect(() => {\n    api\n      .getBoards()\n      .then((data) => {\n        setBoards(data);\n        if (data.length > 0) {\n          setActiveBoard(data[0]);\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (activeBoard) {\n      setLoadingBoard(true);\n      api\n        .getLists(activeBoard._id)\n        .then((fetchedLists) => {\n          // Normalize IDs: always use _id in frontend\n          const normalizedLists = fetchedLists\n            .filter((list) => list._id || list.id) // Filter out lists without any ID\n            .map((list) => ({\n              ...list,\n              _id: list._id || list.id || \"\", // Provide empty string as fallback\n            }));\n          setLists(normalizedLists);\n          // Use cards from each list if available\n          const cardsMap: Record<string, CardType[]> = {};\n          normalizedLists.forEach((list) => {\n            const key = list._id || list.id || \"\";\n            cardsMap[key] = list.cards || [];\n          });\n          setCards(cardsMap);\n        })\n        .finally(() => setLoadingBoard(false));\n    }\n  }, [activeBoard]);\n\n  const handleCreateBoard = async () => {\n    const title = prompt(\"Enter board name:\");\n    if (title) {\n      const newBoard = await api.createBoard({ title });\n      setBoards([...boards, newBoard]);\n      setActiveBoard(newBoard);\n    }\n  };\n\n  const handleCreateList = async () => {\n    if (newListTitle && activeBoard) {\n      try {\n        const newList = await api.createList({\n          title: newListTitle,\n          board: activeBoard._id,\n        });\n        setLists([...lists, newList]);\n        setNewListTitle(\"\");\n        setIsCreatingList(false);\n      } catch (error) {\n        console.error(\"Failed to create list\", error);\n        // You could show an error message to the user here\n      }\n    }\n  };\n\n  // Helper to get all cards for a list\n  const getCards = (listId: string = \"\") => cards[listId] || [];\n\n  // Handler to be passed to List for card creation\n  const handleCreateCard = async (\n    listId: string,\n    cardData: Partial<CardType>,\n    onSuccess: (card: CardType) => void,\n  ) => {\n    setCardOpLoading(true);\n    setCardOpError(\"\");\n    try {\n      const newCard = await api.createCard(cardData);\n      onSuccess(newCard);\n    } catch (err: unknown) {\n      setCardOpError(err instanceof Error ? err.message : \"Failed to create card\");\n    } finally {\n      setCardOpLoading(false);\n    }\n  };\n\n  const handleDragEnd = async (event: DragEndEvent) => {\n    const { active, over } = event;\n    if (!over) return;\n    if (active.id === over.id) return;\n\n    // List drag\n    if (\n      active.data.current?.type === \"List\" &&\n      over.data.current?.type === \"List\"\n    ) {\n      setLists((currentLists) => {\n        const activeIndex = currentLists.findIndex((l) => l._id === active.id);\n        const overIndex = currentLists.findIndex((l) => l._id === over.id);\n        if (activeIndex === -1 || overIndex === -1) return currentLists;\n        const newLists = arrayMove(currentLists, activeIndex, overIndex);\n        newLists.forEach((list, idx) => {\n          const newOrder = (idx + 1) * 1024;\n          if (list.order !== newOrder)\n            api.reorderList(list._id || \"\", newOrder);\n        });\n        return newLists;\n      });\n      return;\n    }\n\n    // Card drag\n    if (active.data.current?.type === \"Card\") {\n      const fromListId = active.data.current?.listId;\n      const toListId = over.data.current?.listId;\n      if (!fromListId || !toListId) return;\n      if (!cards[fromListId] || !cards[toListId]) return;\n\n      const activeIndex = cards[fromListId].findIndex(\n        (c) => c._id === active.id,\n      );\n      let overIndex = cards[toListId].findIndex((c) => c._id === over.id);\n      if (overIndex === -1) overIndex = cards[toListId].length;\n\n      // Calculate new order value\n      let newOrder;\n      const toListCards = cards[toListId];\n      if (toListCards.length === 0) {\n        newOrder = 0;\n      } else if (overIndex === 0) {\n        newOrder = (toListCards[0].order || 0) - 1024;\n      } else if (overIndex === toListCards.length) {\n        newOrder = (toListCards[toListCards.length - 1].order || 0) + 1024;\n      } else {\n        const prevOrder = toListCards[overIndex - 1].order || 0;\n        const nextOrder = toListCards[overIndex].order || 0;\n        newOrder = (prevOrder + nextOrder) / 2;\n      }\n\n      const movedCard = {\n        ...cards[fromListId][activeIndex],\n        list: toListId,\n        order: newOrder,\n      };\n\n      let newCards = { ...cards };\n      newCards[fromListId] = [...newCards[fromListId]];\n      newCards[toListId] = [...newCards[toListId]];\n      newCards[fromListId].splice(activeIndex, 1);\n      newCards[toListId].splice(overIndex, 0, movedCard);\n\n      // Recalculate order for all cards in the destination list\n      newCards[toListId] = newCards[toListId].map((card, idx) => ({\n        ...card,\n        order: (idx + 1) * 1024,\n      }));\n      // If card moved between lists, recalculate order for source list too\n      if (fromListId !== toListId) {\n        newCards[fromListId] = newCards[fromListId].map((card, idx) => ({\n          ...card,\n          order: (idx + 1) * 1024,\n        }));\n      }\n\n      setCards(newCards);\n\n      // Persist changes to the server for all affected cards\n      setCardOpLoading(true);\n      setCardOpError(\"\");\n      try {\n        await Promise.all([\n          ...newCards[toListId].map((card) =>\n            api.updateCard(card._id, { order: card.order, list: card.list }),\n          ),\n          ...(fromListId !== toListId\n            ? newCards[fromListId].map((card) =>\n                api.updateCard(card._id, {\n                  order: card.order,\n                  list: card.list,\n                }),\n              )\n            : []),\n        ]);\n      } catch (error: unknown) {\n        setCardOpError(error instanceof Error ? error.message : \"Failed to update card positions\");\n      } finally {\n        setCardOpLoading(false);\n      }\n      return;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex h-screen\">\n        <aside className=\"w-64 bg-gray-100 dark:bg-gray-800 p-4\">\n          <div className=\"h-8 w-32 bg-gray-200 dark:bg-gray-700 rounded-md mb-4 animate-pulse\"></div>\n          <div className=\"space-y-2\">\n            <div className=\"h-10 bg-gray-200 dark:bg-gray-700 rounded-md animate-pulse\"></div>\n            <div className=\"h-10 bg-gray-200 dark:bg-gray-700 rounded-md animate-pulse\"></div>\n          </div>\n        </aside>\n        <main className=\"flex-1 p-4\">\n          <BoardSkeleton />\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Loading overlay */}\n      {cardOpLoading && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/30\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg px-8 py-6 flex flex-col items-center gap-4\">\n            <svg\n              className=\"animate-spin w-8 h-8 text-indigo-600 dark:text-indigo-400\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n            >\n              <circle\n                className=\"opacity-25\"\n                cx=\"12\"\n                cy=\"12\"\n                r=\"10\"\n                stroke=\"currentColor\"\n                strokeWidth=\"4\"\n              ></circle>\n              <path\n                className=\"opacity-75\"\n                fill=\"currentColor\"\n                d=\"M4 12a8 8 0 018-8v8z\"\n              ></path>\n            </svg>\n            <span className=\"text-gray-700 dark:text-gray-200 font-medium\">\n              Updating cards...\n            </span>\n          </div>\n        </div>\n      )}\n      {/* Error popup */}\n      {cardOpError && (\n        <div className=\"fixed top-6 left-1/2 -translate-x-1/2 z-50\">\n          <div className=\"bg-red-600 text-white px-6 py-3 rounded-lg shadow-lg flex items-center gap-3\">\n            <svg\n              className=\"w-5 h-5\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M18.364 5.636l-12.728 12.728M5.636 5.636l12.728 12.728\"\n              />\n            </svg>\n            <span>{cardOpError}</span>\n            <button\n              className=\"ml-4 text-white/80 hover:text-white\"\n              onClick={() => setCardOpError(\"\")}\n            >\n              &times;\n            </button>\n          </div>\n        </div>\n      )}\n      <aside className=\"w-72 bg-white dark:bg-gray-800 shadow-lg flex flex-col\">\n        <div className=\"p-6\">\n          <h2 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-6\">\n            Boards\n          </h2>\n          <div className=\"space-y-2\">\n            {boards.map((board) => (\n              <button\n                key={board._id}\n                onClick={() => setActiveBoard(board)}\n                className={`w-full text-left px-4 py-3 rounded-lg transition-all duration-200 ${\n                  activeBoard?._id === board._id\n                    ? \"bg-indigo-50 dark:bg-indigo-900/30 text-indigo-600 dark:text-indigo-400 font-medium\"\n                    : \"text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700/50\"\n                }`}\n              >\n                <span className=\"flex items-center gap-3\">\n                  <svg\n                    className=\"w-4 h-4\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n                    />\n                  </svg>\n                  {board.title}\n                </span>\n              </button>\n            ))}\n          </div>\n          <button\n            onClick={handleCreateBoard}\n            className=\"mt-6 w-full bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2.5 rounded-lg font-medium transition-colors duration-200 flex items-center justify-center gap-2\"\n          >\n            <svg\n              className=\"w-5 h-5\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M12 4v16m8-8H4\"\n              />\n            </svg>\n            Create Board\n          </button>\n        </div>\n      </aside>\n      <main className=\"flex-1 p-8 overflow-x-auto\">\n        {loadingBoard ? (\n          <BoardSkeleton />\n        ) : activeBoard ? (\n          <DndContext\n            onDragEnd={handleDragEnd}\n            collisionDetection={closestCorners}\n          >\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                {activeBoard.title}\n              </h1>\n              <button\n                onClick={() => setIsCreatingList(true)}\n                className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200 flex items-center gap-2\"\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M12 4v16m8-8H4\"\n                  />\n                </svg>\n                Create List\n              </button>\n            </div>\n            <SortableContext\n              items={lists.map((l) => l._id || l.id || \"\")}\n              strategy={horizontalListSortingStrategy}\n            >\n              <div className=\"flex gap-6 mt-4\">\n                {[\n                  ...(lists.length > 0\n                    ? lists\n                        .map((list) => {\n                          const key: string = list._id\n                            ? String(list._id)\n                            : list.id\n                              ? String(list.id)\n                              : \"\";\n                          return { list, key };\n                        })\n                        .filter(({ key }) => key.length > 0)\n                        .map(({ list, key }) => (\n                          <List\n                            key={key}\n                            list={list}\n                            cards={getCards(key)}\n                            onCardCreated={(card) => {\n                              setCards((prev) => ({\n                                ...prev,\n                                [key]: [...(prev[key] || []), card],\n                              }));\n                            }}\n                            onCreateCard={handleCreateCard}\n                            onDelete={(listId) => {\n                              setLists((prev) =>\n                                prev.filter((l) => (l._id || l.id) !== listId),\n                              );\n                              setCards((prev) => {\n                                const newCards = { ...prev };\n                                delete newCards[listId];\n                                return newCards;\n                              });\n                            }}\n                          />\n                        ))\n                    : [\n                        <div\n                          key=\"empty-state\"\n                          className=\"flex flex-col items-center justify-center w-full py-16\"\n                        >\n                          <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-8 text-center\">\n                            <svg\n                              className=\"w-16 h-16 text-gray-400 dark:text-gray-500 mx-auto mb-4\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              viewBox=\"0 0 24 24\"\n                            >\n                              <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n                              />\n                            </svg>\n                            <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n                              No lists yet. Create one to get started!\n                            </p>\n                            <button\n                              onClick={() => setIsCreatingList(true)}\n                              className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200 inline-flex items-center gap-2\"\n                            >\n                              <svg\n                                className=\"w-5 h-5\"\n                                fill=\"none\"\n                                stroke=\"currentColor\"\n                                viewBox=\"0 0 24 24\"\n                              >\n                                <path\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                  strokeWidth=\"2\"\n                                  d=\"M12 4v16m8-8H4\"\n                                />\n                              </svg>\n                              Create List\n                            </button>\n                          </div>\n                        </div>,\n                      ]),\n                  isCreatingList ? (\n                    <div\n                      key=\"create-list-form\"\n                      className=\"bg-white dark:bg-gray-800 shadow-lg rounded-lg w-72 h-fit p-4\"\n                    >\n                      <input\n                        type=\"text\"\n                        value={newListTitle}\n                        onChange={(e) => setNewListTitle(e.target.value)}\n                        placeholder=\"Enter list title...\"\n                        className=\"w-full p-2 border dark:border-gray-600 rounded-lg mb-3 bg-transparent dark:bg-gray-700 dark:text-white focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-400 focus:border-transparent\"\n                        autoFocus\n                      />\n                      <div className=\"flex gap-2\">\n                        <button\n                          onClick={handleCreateList}\n                          className=\"flex-1 bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200\"\n                        >\n                          Add List\n                        </button>\n                        <button\n                          onClick={() => setIsCreatingList(false)}\n                          className=\"px-4 py-2 text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors duration-200\"\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    </div>\n                  ) : null,\n                ]}\n              </div>\n            </SortableContext>\n          </DndContext>\n        ) : (\n          <div className=\"flex justify-center items-center h-full\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg p-8 text-center shadow-lg\">\n              <svg\n                className=\"w-16 h-16 text-gray-400 dark:text-gray-500 mx-auto mb-4\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n                />\n              </svg>\n              <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n                No boards found. Create one to get started!\n              </p>\n              <button\n                onClick={handleCreateBoard}\n                className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200 inline-flex items-center gap-2\"\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M12 4v16m8-8H4\"\n                  />\n                </svg>\n                Create Board\n              </button>\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAUA;AACA;AACA;AAhBA;;;;;;;;AAkBe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IACpD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IACjE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA8B,CAAC;IAChE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,kHAAA,CAAA,MAAG,CACA,SAAS,GACT,IAAI,CAAC,CAAC;YACL,UAAU;YACV,IAAI,KAAK,MAAM,GAAG,GAAG;gBACnB,eAAe,IAAI,CAAC,EAAE;YACxB;YACA,WAAW;QACb,GACC,KAAK,CAAC,CAAC;YACN,QAAQ,KAAK,CAAC;YACd,WAAW;QACb;IACJ,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa;YACf,gBAAgB;YAChB,kHAAA,CAAA,MAAG,CACA,QAAQ,CAAC,YAAY,GAAG,EACxB,IAAI,CAAC,CAAC;gBACL,4CAA4C;gBAC5C,MAAM,kBAAkB,aACrB,MAAM,CAAC,CAAC,OAAS,KAAK,GAAG,IAAI,KAAK,EAAE,EAAE,kCAAkC;iBACxE,GAAG,CAAC,CAAC,OAAS,CAAC;wBACd,GAAG,IAAI;wBACP,KAAK,KAAK,GAAG,IAAI,KAAK,EAAE,IAAI;oBAC9B,CAAC;gBACH,SAAS;gBACT,wCAAwC;gBACxC,MAAM,WAAuC,CAAC;gBAC9C,gBAAgB,OAAO,CAAC,CAAC;oBACvB,MAAM,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,IAAI;oBACnC,QAAQ,CAAC,IAAI,GAAG,KAAK,KAAK,IAAI,EAAE;gBAClC;gBACA,SAAS;YACX,GACC,OAAO,CAAC,IAAM,gBAAgB;QACnC;IACF,GAAG;QAAC;KAAY;IAEhB,MAAM,oBAAoB;QACxB,MAAM,QAAQ,OAAO;QACrB,IAAI,OAAO;YACT,MAAM,WAAW,MAAM,kHAAA,CAAA,MAAG,CAAC,WAAW,CAAC;gBAAE;YAAM;YAC/C,UAAU;mBAAI;gBAAQ;aAAS;YAC/B,eAAe;QACjB;IACF;IAEA,MAAM,mBAAmB;QACvB,IAAI,gBAAgB,aAAa;YAC/B,IAAI;gBACF,MAAM,UAAU,MAAM,kHAAA,CAAA,MAAG,CAAC,UAAU,CAAC;oBACnC,OAAO;oBACP,OAAO,YAAY,GAAG;gBACxB;gBACA,SAAS;uBAAI;oBAAO;iBAAQ;gBAC5B,gBAAgB;gBAChB,kBAAkB;YACpB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,mDAAmD;YACrD;QACF;IACF;IAEA,qCAAqC;IACrC,MAAM,WAAW,CAAC,SAAiB,EAAE,GAAK,KAAK,CAAC,OAAO,IAAI,EAAE;IAE7D,iDAAiD;IACjD,MAAM,mBAAmB,OACvB,QACA,UACA;QAEA,iBAAiB;QACjB,eAAe;QACf,IAAI;YACF,MAAM,UAAU,MAAM,kHAAA,CAAA,MAAG,CAAC,UAAU,CAAC;YACrC,UAAU;QACZ,EAAE,OAAO,KAAc;YACrB,eAAe,eAAe,QAAQ,IAAI,OAAO,GAAG;QACtD,SAAU;YACR,iBAAiB;QACnB;IACF;IAEA,MAAM,gBAAgB,OAAO;QAC3B,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG;QACzB,IAAI,CAAC,MAAM;QACX,IAAI,OAAO,EAAE,KAAK,KAAK,EAAE,EAAE;QAE3B,YAAY;QACZ,IACE,OAAO,IAAI,CAAC,OAAO,EAAE,SAAS,UAC9B,KAAK,IAAI,CAAC,OAAO,EAAE,SAAS,QAC5B;YACA,SAAS,CAAC;gBACR,MAAM,cAAc,aAAa,SAAS,CAAC,CAAC,IAAM,EAAE,GAAG,KAAK,OAAO,EAAE;gBACrE,MAAM,YAAY,aAAa,SAAS,CAAC,CAAC,IAAM,EAAE,GAAG,KAAK,KAAK,EAAE;gBACjE,IAAI,gBAAgB,CAAC,KAAK,cAAc,CAAC,GAAG,OAAO;gBACnD,MAAM,WAAW,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,aAAa;gBACtD,SAAS,OAAO,CAAC,CAAC,MAAM;oBACtB,MAAM,WAAW,CAAC,MAAM,CAAC,IAAI;oBAC7B,IAAI,KAAK,KAAK,KAAK,UACjB,kHAAA,CAAA,MAAG,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,IAAI;gBACpC;gBACA,OAAO;YACT;YACA;QACF;QAEA,YAAY;QACZ,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE,SAAS,QAAQ;YACxC,MAAM,aAAa,OAAO,IAAI,CAAC,OAAO,EAAE;YACxC,MAAM,WAAW,KAAK,IAAI,CAAC,OAAO,EAAE;YACpC,IAAI,CAAC,cAAc,CAAC,UAAU;YAC9B,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YAE5C,MAAM,cAAc,KAAK,CAAC,WAAW,CAAC,SAAS,CAC7C,CAAC,IAAM,EAAE,GAAG,KAAK,OAAO,EAAE;YAE5B,IAAI,YAAY,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAM,EAAE,GAAG,KAAK,KAAK,EAAE;YAClE,IAAI,cAAc,CAAC,GAAG,YAAY,KAAK,CAAC,SAAS,CAAC,MAAM;YAExD,4BAA4B;YAC5B,IAAI;YACJ,MAAM,cAAc,KAAK,CAAC,SAAS;YACnC,IAAI,YAAY,MAAM,KAAK,GAAG;gBAC5B,WAAW;YACb,OAAO,IAAI,cAAc,GAAG;gBAC1B,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI;YAC3C,OAAO,IAAI,cAAc,YAAY,MAAM,EAAE;gBAC3C,WAAW,CAAC,WAAW,CAAC,YAAY,MAAM,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI;YAChE,OAAO;gBACL,MAAM,YAAY,WAAW,CAAC,YAAY,EAAE,CAAC,KAAK,IAAI;gBACtD,MAAM,YAAY,WAAW,CAAC,UAAU,CAAC,KAAK,IAAI;gBAClD,WAAW,CAAC,YAAY,SAAS,IAAI;YACvC;YAEA,MAAM,YAAY;gBAChB,GAAG,KAAK,CAAC,WAAW,CAAC,YAAY;gBACjC,MAAM;gBACN,OAAO;YACT;YAEA,IAAI,WAAW;gBAAE,GAAG,KAAK;YAAC;YAC1B,QAAQ,CAAC,WAAW,GAAG;mBAAI,QAAQ,CAAC,WAAW;aAAC;YAChD,QAAQ,CAAC,SAAS,GAAG;mBAAI,QAAQ,CAAC,SAAS;aAAC;YAC5C,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa;YACzC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,GAAG;YAExC,0DAA0D;YAC1D,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,MAAQ,CAAC;oBAC1D,GAAG,IAAI;oBACP,OAAO,CAAC,MAAM,CAAC,IAAI;gBACrB,CAAC;YACD,qEAAqE;YACrE,IAAI,eAAe,UAAU;gBAC3B,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,MAAQ,CAAC;wBAC9D,GAAG,IAAI;wBACP,OAAO,CAAC,MAAM,CAAC,IAAI;oBACrB,CAAC;YACH;YAEA,SAAS;YAET,uDAAuD;YACvD,iBAAiB;YACjB,eAAe;YACf,IAAI;gBACF,MAAM,QAAQ,GAAG,CAAC;uBACb,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,OACzB,kHAAA,CAAA,MAAG,CAAC,UAAU,CAAC,KAAK,GAAG,EAAE;4BAAE,OAAO,KAAK,KAAK;4BAAE,MAAM,KAAK,IAAI;wBAAC;uBAE5D,eAAe,WACf,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,OACxB,kHAAA,CAAA,MAAG,CAAC,UAAU,CAAC,KAAK,GAAG,EAAE;4BACvB,OAAO,KAAK,KAAK;4BACjB,MAAM,KAAK,IAAI;wBACjB,MAEF,EAAE;iBACP;YACH,EAAE,OAAO,OAAgB;gBACvB,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC1D,SAAU;gBACR,iBAAiB;YACnB;YACA;QACF;IACF;IAEA,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAM,WAAU;;sCACf,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;;;;;8CACf,8OAAC;oCAAI,WAAU;;;;;;;;;;;;;;;;;;8BAGnB,8OAAC;oBAAK,WAAU;8BACd,cAAA,8OAAC,0IAAA,CAAA,gBAAa;;;;;;;;;;;;;;;;IAItB;IAEA,qBACE,8OAAC;QAAI,WAAU;;YAEZ,+BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,WAAU;4BACV,MAAK;4BACL,SAAQ;;8CAER,8OAAC;oCACC,WAAU;oCACV,IAAG;oCACH,IAAG;oCACH,GAAE;oCACF,QAAO;oCACP,aAAY;;;;;;8CAEd,8OAAC;oCACC,WAAU;oCACV,MAAK;oCACL,GAAE;;;;;;;;;;;;sCAGN,8OAAC;4BAAK,WAAU;sCAA+C;;;;;;;;;;;;;;;;;YAOpE,6BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,WAAU;4BACV,MAAK;4BACL,QAAO;4BACP,SAAQ;sCAER,cAAA,8OAAC;gCACC,eAAc;gCACd,gBAAe;gCACf,aAAY;gCACZ,GAAE;;;;;;;;;;;sCAGN,8OAAC;sCAAM;;;;;;sCACP,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,eAAe;sCAC/B;;;;;;;;;;;;;;;;;0BAMP,8OAAC;gBAAM,WAAU;0BACf,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA2D;;;;;;sCAGzE,8OAAC;4BAAI,WAAU;sCACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;oCAEC,SAAS,IAAM,eAAe;oCAC9B,WAAW,CAAC,kEAAkE,EAC5E,aAAa,QAAQ,MAAM,GAAG,GAC1B,wFACA,+EACJ;8CAEF,cAAA,8OAAC;wCAAK,WAAU;;0DACd,8OAAC;gDACC,WAAU;gDACV,MAAK;gDACL,QAAO;gDACP,SAAQ;0DAER,cAAA,8OAAC;oDACC,eAAc;oDACd,gBAAe;oDACf,aAAY;oDACZ,GAAE;;;;;;;;;;;4CAGL,MAAM,KAAK;;;;;;;mCAtBT,MAAM,GAAG;;;;;;;;;;sCA2BpB,8OAAC;4BACC,SAAS;4BACT,WAAU;;8CAEV,8OAAC;oCACC,WAAU;oCACV,MAAK;oCACL,QAAO;oCACP,SAAQ;8CAER,cAAA,8OAAC;wCACC,eAAc;wCACd,gBAAe;wCACf,aAAY;wCACZ,GAAE;;;;;;;;;;;gCAEA;;;;;;;;;;;;;;;;;;0BAKZ,8OAAC;gBAAK,WAAU;0BACb,6BACC,8OAAC,0IAAA,CAAA,gBAAa;;;;2BACZ,4BACF,8OAAC,2JAAA,CAAA,aAAU;oBACT,WAAW;oBACX,oBAAoB,2JAAA,CAAA,iBAAc;;sCAElC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CACX,YAAY,KAAK;;;;;;8CAEpB,8OAAC;oCACC,SAAS,IAAM,kBAAkB;oCACjC,WAAU;;sDAEV,8OAAC;4CACC,WAAU;4CACV,MAAK;4CACL,QAAO;4CACP,SAAQ;sDAER,cAAA,8OAAC;gDACC,eAAc;gDACd,gBAAe;gDACf,aAAY;gDACZ,GAAE;;;;;;;;;;;wCAEA;;;;;;;;;;;;;sCAIV,8OAAC,mKAAA,CAAA,kBAAe;4BACd,OAAO,MAAM,GAAG,CAAC,CAAC,IAAM,EAAE,GAAG,IAAI,EAAE,EAAE,IAAI;4BACzC,UAAU,mKAAA,CAAA,gCAA6B;sCAEvC,cAAA,8OAAC;gCAAI,WAAU;0CACZ;uCACK,MAAM,MAAM,GAAG,IACf,MACG,GAAG,CAAC,CAAC;wCACJ,MAAM,MAAc,KAAK,GAAG,GACxB,OAAO,KAAK,GAAG,IACf,KAAK,EAAE,GACL,OAAO,KAAK,EAAE,IACd;wCACN,OAAO;4CAAE;4CAAM;wCAAI;oCACrB,GACC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,GAAK,IAAI,MAAM,GAAG,GACjC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,iBACjB,8OAAC,iIAAA,CAAA,OAAI;4CAEH,MAAM;4CACN,OAAO,SAAS;4CAChB,eAAe,CAAC;gDACd,SAAS,CAAC,OAAS,CAAC;wDAClB,GAAG,IAAI;wDACP,CAAC,IAAI,EAAE;+DAAK,IAAI,CAAC,IAAI,IAAI,EAAE;4DAAG;yDAAK;oDACrC,CAAC;4CACH;4CACA,cAAc;4CACd,UAAU,CAAC;gDACT,SAAS,CAAC,OACR,KAAK,MAAM,CAAC,CAAC,IAAM,CAAC,EAAE,GAAG,IAAI,EAAE,EAAE,MAAM;gDAEzC,SAAS,CAAC;oDACR,MAAM,WAAW;wDAAE,GAAG,IAAI;oDAAC;oDAC3B,OAAO,QAAQ,CAAC,OAAO;oDACvB,OAAO;gDACT;4CACF;2CAnBK;;;;oDAsBX;sDACE,8OAAC;4CAEC,WAAU;sDAEV,cAAA,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDACC,WAAU;wDACV,MAAK;wDACL,QAAO;wDACP,SAAQ;kEAER,cAAA,8OAAC;4DACC,eAAc;4DACd,gBAAe;4DACf,aAAY;4DACZ,GAAE;;;;;;;;;;;kEAGN,8OAAC;wDAAE,WAAU;kEAAwC;;;;;;kEAGrD,8OAAC;wDACC,SAAS,IAAM,kBAAkB;wDACjC,WAAU;;0EAEV,8OAAC;gEACC,WAAU;gEACV,MAAK;gEACL,QAAO;gEACP,SAAQ;0EAER,cAAA,8OAAC;oEACC,eAAc;oEACd,gBAAe;oEACf,aAAY;oEACZ,GAAE;;;;;;;;;;;4DAEA;;;;;;;;;;;;;2CApCN;;;;;qCAyCP;oCACL,+BACE,8OAAC;wCAEC,WAAU;;0DAEV,8OAAC;gDACC,MAAK;gDACL,OAAO;gDACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;gDAC/C,aAAY;gDACZ,WAAU;gDACV,SAAS;;;;;;0DAEX,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDACC,SAAS;wDACT,WAAU;kEACX;;;;;;kEAGD,8OAAC;wDACC,SAAS,IAAM,kBAAkB;wDACjC,WAAU;kEACX;;;;;;;;;;;;;uCArBC;;;;+CA0BJ;iCACL;;;;;;;;;;;;;;;;yCAKP,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,WAAU;gCACV,MAAK;gCACL,QAAO;gCACP,SAAQ;0CAER,cAAA,8OAAC;oCACC,eAAc;oCACd,gBAAe;oCACf,aAAY;oCACZ,GAAE;;;;;;;;;;;0CAGN,8OAAC;gCAAE,WAAU;0CAAwC;;;;;;0CAGrD,8OAAC;gCACC,SAAS;gCACT,WAAU;;kDAEV,8OAAC;wCACC,WAAU;wCACV,MAAK;wCACL,QAAO;wCACP,SAAQ;kDAER,cAAA,8OAAC;4CACC,eAAc;4CACd,gBAAe;4CACf,aAAY;4CACZ,GAAE;;;;;;;;;;;oCAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAStB","debugId":null}}]
}