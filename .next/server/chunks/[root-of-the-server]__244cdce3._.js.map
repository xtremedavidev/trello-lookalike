{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/libs/db/mongoose.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { Connection, connect } from \"mongoose\";\r\n\r\nconst MONGO_URI = process.env.MONGO_URI;\r\n\r\nif (!MONGO_URI) {\r\n  throw new Error(\"Please define the MONGODB_URI environment variable inside .env.local\");\r\n}\r\n\r\ninterface MongooseCache {\r\n  conn: Connection | null;\r\n  promise: Promise<Connection> | null;\r\n}\r\n\r\ndeclare global {\r\n  var mongooseCache: MongooseCache;\r\n}\r\n\r\nglobal.mongooseCache = global.mongooseCache || { conn: null, promise: null };\r\n\r\nexport async function connectDB(): Promise<Connection> {\r\n  if (global.mongooseCache.conn) {\r\n    return global.mongooseCache.conn;\r\n  }\r\n\r\n  if (!global.mongooseCache.promise) {\r\n    global.mongooseCache.promise = connect(MONGO_URI!).then();\r\n  }\r\n\r\n  global.mongooseCache.conn = await global.mongooseCache.promise;\r\n  return global.mongooseCache.conn;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEA,MAAM,YAAY,QAAQ,GAAG,CAAC,SAAS;AAEvC,IAAI,CAAC,WAAW;IACd,MAAM,IAAI,MAAM;AAClB;AAWA,OAAO,aAAa,GAAG,OAAO,aAAa,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAEpE,eAAe;IACpB,IAAI,OAAO,aAAa,CAAC,IAAI,EAAE;QAC7B,OAAO,OAAO,aAAa,CAAC,IAAI;IAClC;IAEA,IAAI,CAAC,OAAO,aAAa,CAAC,OAAO,EAAE;QACjC,OAAO,aAAa,CAAC,OAAO,GAAG,CAAA,GAAA,yGAAA,CAAA,UAAO,AAAD,EAAE,WAAY,IAAI;IACzD;IAEA,OAAO,aAAa,CAAC,IAAI,GAAG,MAAM,OAAO,aAAa,CAAC,OAAO;IAC9D,OAAO,OAAO,aAAa,CAAC,IAAI;AAClC;;;IAXsB;;AAAA,iPAAA","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/libs/db/models/UserModel.ts"],"sourcesContent":["import { model, models, Schema } from \"mongoose\";\r\n\r\nconst UserSchema = new Schema({\r\n  name: { type: String },\r\n  email: { type: String, required: true, unique: true },\r\n  password: { type: String, required: true },\r\n}, { timestamps: true });\r\n\r\nexport const UserModel = models?.User || model('User', UserSchema);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAAC;IAC5B,MAAM;QAAE,MAAM;IAAO;IACrB,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC3C,GAAG;IAAE,YAAY;AAAK;AAEf,MAAM,YAAY,yGAAA,CAAA,SAAM,EAAE,QAAQ,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,QAAQ","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/app/api/users/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { connectDB } from '@/libs/db/mongoose';\r\nimport { UserModel } from '@/libs/db/models/UserModel';\r\nimport bcrypt from 'bcrypt';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nexport async function POST(req: NextRequest) {\r\n  await connectDB();\r\n  const { email, password } = await req.json();\r\n\r\n  if (!email || !password) {\r\n    return NextResponse.json({ message: 'Email and password are required' }, { status: 400 });\r\n  }\r\n\r\n  const user = await UserModel.findOne({ email });\r\n  if (!user) {\r\n    return NextResponse.json({ message: 'Invalid credentials' }, { status: 401 });\r\n  }\r\n\r\n  const isPasswordValid = await bcrypt.compare(password, user.password);\r\n  if (!isPasswordValid) {\r\n    return NextResponse.json({ message: 'Invalid credentials' }, { status: 401 });\r\n  }\r\n\r\n  const token = jwt.sign({ userId: user._id }, process.env.JWT_SECRET!, { expiresIn: '1d' });\r\n\r\n  return NextResponse.json({ token, user: { name: user.name, email: user.email } });\r\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,MAAM,CAAA,GAAA,+HAAA,CAAA,YAAS,AAAD;IACd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAE1C,IAAI,CAAC,SAAS,CAAC,UAAU;QACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAkC,GAAG;YAAE,QAAQ;QAAI;IACzF;IAEA,MAAM,OAAO,MAAM,0IAAA,CAAA,YAAS,CAAC,OAAO,CAAC;QAAE;IAAM;IAC7C,IAAI,CAAC,MAAM;QACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC7E;IAEA,MAAM,kBAAkB,MAAM,qGAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;IACpE,IAAI,CAAC,iBAAiB;QACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC7E;IAEA,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QAAE,QAAQ,KAAK,GAAG;IAAC,GAAG,QAAQ,GAAG,CAAC,UAAU,EAAG;QAAE,WAAW;IAAK;IAExF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE;QAAO,MAAM;YAAE,MAAM,KAAK,IAAI;YAAE,OAAO,KAAK,KAAK;QAAC;IAAE;AACjF","debugId":null}}]
}