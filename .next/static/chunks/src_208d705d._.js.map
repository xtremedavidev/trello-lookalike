{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/components/dnd/Card.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\nimport { Card as CardType } from '@/types';\r\n\r\nexport function Card({ card }: { card: CardType }) {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n  } = useSortable({ \r\n    id: card._id,\r\n    data: {\r\n      type: 'Card',\r\n    }\r\n  });\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n  };\r\n\r\n  return (\r\n    <div ref={setNodeRef} style={style} {...attributes} {...listeners} className=\"bg-white p-2 rounded-md shadow-sm\">\r\n      {card.name}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAMO,SAAS,KAAK,EAAE,IAAI,EAAsB;;IAC/C,MAAM,EACJ,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,EACT,UAAU,EACX,GAAG,CAAA,GAAA,sKAAA,CAAA,cAAW,AAAD,EAAE;QACd,IAAI,KAAK,GAAG;QACZ,MAAM;YACJ,MAAM;QACR;IACF;IAEA,MAAM,QAAQ;QACZ,WAAW,wKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC;IACF;IAEA,qBACE,6LAAC;QAAI,KAAK;QAAY,OAAO;QAAQ,GAAG,UAAU;QAAG,GAAG,SAAS;QAAE,WAAU;kBAC1E,KAAK,IAAI;;;;;;AAGhB;GAxBgB;;QAOV,sKAAA,CAAA,cAAW;;;KAPD","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/components/dnd/List.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\r\nimport { Card } from './Card';\r\nimport { List as ListType } from '@/types';\r\n\r\nexport function List({ list, cards }: { list: ListType, cards: any[] }) {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n  } = useSortable({ \r\n    id: list._id,\r\n    data: {\r\n      type: 'List',\r\n    }\r\n  });\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n  };\r\n\r\n  return (\r\n    <div ref={setNodeRef} style={style} {...attributes} {...listeners} className=\"bg-gray-200 p-4 rounded-md w-72\">\r\n      <h2 className=\"font-bold mb-2\">{list.name}</h2>\r\n      <SortableContext items={cards.map(c => c._id)} strategy={verticalListSortingStrategy}>\r\n        <div className=\"space-y-2\">\r\n          {cards.map(card => (\r\n            <Card key={card._id} card={card} />\r\n          ))}\r\n        </div>\r\n      </SortableContext>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAEA;;;AALA;;;;;AAQO,SAAS,KAAK,EAAE,IAAI,EAAE,KAAK,EAAoC;;IACpE,MAAM,EACJ,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,EACT,UAAU,EACX,GAAG,CAAA,GAAA,sKAAA,CAAA,cAAW,AAAD,EAAE;QACd,IAAI,KAAK,GAAG;QACZ,MAAM;YACJ,MAAM;QACR;IACF;IAEA,MAAM,QAAQ;QACZ,WAAW,wKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC;IACF;IAEA,qBACE,6LAAC;QAAI,KAAK;QAAY,OAAO;QAAQ,GAAG,UAAU;QAAG,GAAG,SAAS;QAAE,WAAU;;0BAC3E,6LAAC;gBAAG,WAAU;0BAAkB,KAAK,IAAI;;;;;;0BACzC,6LAAC,sKAAA,CAAA,kBAAe;gBAAC,OAAO,MAAM,GAAG,CAAC,CAAA,IAAK,EAAE,GAAG;gBAAG,UAAU,sKAAA,CAAA,8BAA2B;0BAClF,cAAA,6LAAC;oBAAI,WAAU;8BACZ,MAAM,GAAG,CAAC,CAAA,qBACT,6LAAC,oIAAA,CAAA,OAAI;4BAAgB,MAAM;2BAAhB,KAAK,GAAG;;;;;;;;;;;;;;;;;;;;;AAM/B;GA/BgB;;QAOV,sKAAA,CAAA,cAAW;;;KAPD","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/components/dnd/BoardSkeleton.tsx"],"sourcesContent":["export function BoardSkeleton() {\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"h-8 w-48 bg-gray-200 dark:bg-gray-700 rounded-md mb-4 animate-pulse\"></div>\r\n      <div className=\"flex gap-4\">\r\n        <div className=\"w-72 bg-gray-200 dark:bg-gray-700 rounded-md p-4 animate-pulse\">\r\n          <div className=\"h-6 w-32 bg-gray-300 dark:bg-gray-600 rounded-md mb-2\"></div>\r\n          <div className=\"space-y-2\">\r\n            <div className=\"h-10 bg-gray-300 dark:bg-gray-600 rounded-md\"></div>\r\n            <div className=\"h-10 bg-gray-300 dark:bg-gray-600 rounded-md\"></div>\r\n            <div className=\"h-10 bg-gray-300 dark:bg-gray-600 rounded-md\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-72 bg-gray-200 dark:bg-gray-700 rounded-md p-4 animate-pulse\">\r\n          <div className=\"h-6 w-32 bg-gray-300 dark:bg-gray-600 rounded-md mb-2\"></div>\r\n          <div className=\"space-y-2\">\r\n            <div className=\"h-10 bg-gray-300 dark:bg-gray-600 rounded-md\"></div>\r\n            <div className=\"h-10 bg-gray-300 dark:bg-gray-600 rounded-md\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-72 bg-gray-200 dark:bg-gray-700 rounded-md p-4 animate-pulse\">\r\n          <div className=\"h-6 w-32 bg-gray-300 dark:bg-gray-600 rounded-md mb-2\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;;AAAO,SAAS;IACd,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;;;;;kDACf,6LAAC;wCAAI,WAAU;;;;;;kDACf,6LAAC;wCAAI,WAAU;;;;;;;;;;;;;;;;;;kCAGnB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;;;;;kDACf,6LAAC;wCAAI,WAAU;;;;;;;;;;;;;;;;;;kCAGnB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKzB;KA1BgB","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/hooks/useCsrf.ts"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport function useCsrf() {\r\n  const [csrfToken, setCsrfToken] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchCsrfToken() {\r\n      const tokenFromCookie = Cookies.get('csrf-token');\r\n      if (tokenFromCookie) {\r\n        setCsrfToken(tokenFromCookie);\r\n        return;\r\n      }\r\n      const res = await fetch('/api/auth/csrf-token');\r\n      const { csrfToken: tokenFromServer } = await res.json();\r\n      setCsrfToken(tokenFromServer);\r\n    }\r\n    fetchCsrfToken();\r\n  }, []);\r\n\r\n  return csrfToken;\r\n} "],"names":[],"mappings":";;;AAEA;AACA;;AAHA;;;AAKO,SAAS;;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAE1D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,eAAe;gBACb,MAAM,kBAAkB,wJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;gBACpC,IAAI,iBAAiB;oBACnB,aAAa;oBACb;gBACF;gBACA,MAAM,MAAM,MAAM,MAAM;gBACxB,MAAM,EAAE,WAAW,eAAe,EAAE,GAAG,MAAM,IAAI,IAAI;gBACrD,aAAa;YACf;YACA;QACF;4BAAG,EAAE;IAEL,OAAO;AACT;GAlBgB","debugId":null}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/libs/fetch.ts"],"sourcesContent":["import Cookies from 'js-cookie';\r\n\r\nexport async function fetchWithCsrf(url: string, options: RequestInit = {}) {\r\n  const csrfToken = Cookies.get('csrf-token');\r\n\r\n  const headers = {\r\n    ...options.headers,\r\n    'Content-Type': 'application/json',\r\n    'x-csrf-token': csrfToken || '',\r\n  };\r\n\r\n  return fetch(url, {\r\n    ...options,\r\n    headers,\r\n  });\r\n} "],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,cAAc,GAAW,EAAE,UAAuB,CAAC,CAAC;IACxE,MAAM,YAAY,wJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;IAE9B,MAAM,UAAU;QACd,GAAG,QAAQ,OAAO;QAClB,gBAAgB;QAChB,gBAAgB,aAAa;IAC/B;IAEA,OAAO,MAAM,KAAK;QAChB,GAAG,OAAO;QACV;IACF;AACF","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/codebase/trello-lookalike/web1-assessment/src/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { DndContext, closestCorners, DragEndEvent } from '@dnd-kit/core';\r\nimport { SortableContext, horizontalListSortingStrategy, arrayMove } from '@dnd-kit/sortable';\r\nimport { List as ListType, Card as CardType, Board as BoardType } from '@/types';\r\nimport { List } from '@/components/dnd/List';\r\nimport { BoardSkeleton } from '@/components/dnd/BoardSkeleton';\r\nimport { Button } from '@/components/ui/Button';\r\nimport { useCsrf } from '@/hooks/useCsrf';\r\nimport { fetchWithCsrf } from '@/libs/fetch';\r\n\r\nexport default function Home() {\r\n  const [boards, setBoards] = useState<BoardType[]>([]);\r\n  const [activeBoard, setActiveBoard] = useState<BoardType | null>(null);\r\n  const [lists, setLists] = useState<ListType[]>([]);\r\n  const [cards, setCards] = useState<CardType[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingBoard, setLoadingBoard] = useState(false);\r\n  const csrfToken = useCsrf();\r\n\r\n  useEffect(() => {\r\n    if (csrfToken) {\r\n        fetch('/api/boards')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setBoards(data);\r\n            if (data.length > 0) {\r\n            setActiveBoard(data[0]);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }\r\n  }, [csrfToken]);\r\n\r\n  useEffect(() => {\r\n    if (activeBoard && csrfToken) {\r\n        setLoadingBoard(true);\r\n      fetch(`/api/boards/${activeBoard._id}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setLists(data.lists);\r\n          setCards(data.cards);\r\n          setLoadingBoard(false);\r\n        });\r\n    }\r\n  }, [activeBoard, csrfToken]);\r\n\r\n  const handleCreateBoard = async () => {\r\n    const name = prompt('Enter board name:');\r\n    if (name) {\r\n      const res = await fetchWithCsrf('/api/boards', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ name }),\r\n      });\r\n      const newBoard = await res.json();\r\n      setBoards([...boards, newBoard]);\r\n      setActiveBoard(newBoard);\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = (event: DragEndEvent) => {\r\n    const { active, over } = event;\r\n    if (!over) return;\r\n\r\n    if (active.id !== over.id) {\r\n        // Dragging lists\r\n        if (active.data.current?.type === 'List' && over.data.current?.type === 'List') {\r\n            setLists((lists) => {\r\n                const activeIndex = lists.findIndex(l => l._id === active.id);\r\n                const overIndex = lists.findIndex(l => l._id === over.id);\r\n                if (activeIndex === -1 || overIndex === -1) return lists;\r\n                const newLists = arrayMove(lists, activeIndex, overIndex);\r\n    \r\n                // API call to update list position\r\n                newLists.forEach((list, index) => {\r\n                fetchWithCsrf(`/api/lists/${list._id}`, {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify({ position: index }),\r\n                });\r\n                });\r\n    \r\n                return newLists;\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n      // Dragging cards\r\n      if (active.data.current?.type === 'Card') {\r\n        setCards((currentCards) => {\r\n            const activeIndex = currentCards.findIndex(c => c._id === active.id);\r\n            const overIndex = currentCards.findIndex(c => c._id === over.id);\r\n\r\n            if (activeIndex === -1 || overIndex === -1) {\r\n                return currentCards;\r\n            }\r\n            \r\n            let newCards = arrayMove(currentCards, activeIndex, overIndex);\r\n            \r\n            const overListId = over.data.current?.sortable?.containerId || newCards[overIndex].list;\r\n\r\n            if (overListId && newCards[activeIndex].list !== overListId) {\r\n                newCards[activeIndex] = { ...newCards[activeIndex], list: overListId };\r\n                newCards = arrayMove(newCards, activeIndex, overIndex);\r\n            }\r\n\r\n            // API call to update card position and list\r\n            fetchWithCsrf(`/api/cards/${active.id}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    position: overIndex,\r\n                    list: overListId,\r\n                }),\r\n            });\r\n          \r\n          return newCards;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n      return (\r\n        <div className=\"flex h-screen\">\r\n            <aside className=\"w-64 bg-gray-100 dark:bg-gray-800 p-4\">\r\n                <div className=\"h-8 w-32 bg-gray-200 dark:bg-gray-700 rounded-md mb-4 animate-pulse\"></div>\r\n                <div className=\"space-y-2\">\r\n                    <div className=\"h-10 bg-gray-200 dark:bg-gray-700 rounded-md animate-pulse\"></div>\r\n                    <div className=\"h-10 bg-gray-200 dark:bg-gray-700 rounded-md animate-pulse\"></div>\r\n                </div>\r\n            </aside>\r\n            <main className=\"flex-1 p-4\">\r\n                <BoardSkeleton />\r\n            </main>\r\n        </div>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <aside className=\"w-64 bg-gray-100 dark:bg-gray-800 p-4\">\r\n        <h2 className=\"text-lg font-bold mb-4\">Boards</h2>\r\n        <div className=\"space-y-2\">\r\n            {boards.map(board => (\r\n                <Button key={board._id} variant={activeBoard?._id === board._id ? 'secondary' : 'ghost'} onClick={() => setActiveBoard(board)} className=\"w-full justify-start\">\r\n                    {board.name}\r\n                </Button>\r\n            ))}\r\n        </div>\r\n        <Button onClick={handleCreateBoard} className=\"mt-4 w-full\">Create Board</Button>\r\n      </aside>\r\n      <main className=\"flex-1 p-4 overflow-x-auto\">\r\n      {loadingBoard ? (\r\n        <BoardSkeleton />\r\n      ) : activeBoard ? (\r\n        <DndContext onDragEnd={handleDragEnd} collisionDetection={closestCorners}>\r\n            <h1 className=\"text-2xl font-bold\">{activeBoard.name}</h1>\r\n          <SortableContext items={lists.map(l => l._id)} strategy={horizontalListSortingStrategy}>\r\n            <div className=\"flex gap-4 mt-4\">\r\n              {lists.length > 0 ? (\r\n                lists.map(list => (\r\n                  <List key={list._id} list={list} cards={cards.filter(c => c.list === list._id)} />\r\n                ))\r\n              ) : (\r\n                <div className=\"flex flex-col items-center justify-center h-full w-full\">\r\n                  <p className=\"text-gray-500\">No lists yet. Create one to get started!</p>\r\n                  {/* TODO: Add a button to create a new list */}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </SortableContext>\r\n        </DndContext>\r\n      ) : (\r\n        <div className=\"flex justify-center items-center h-full\">\r\n          <p>No boards found. Create one to get started!</p>\r\n        </div>\r\n      )}\r\n      </main>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}